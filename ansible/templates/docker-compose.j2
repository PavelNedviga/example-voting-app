# for running in docker compose with prebuilt images
version: '2'
services:
  vote:
    image: {{DOCKER_REGISTRY_HOST}}/{{DOCKER_IMAGE_VOTE}}:{{DOCKER_IMAGE_VERSION}}
    ports:
      - "9050:80"
    depends_on:
      - redis
    networks:
      - front-tier
      - back-tier

  result:
    image: {{DOCKER_REGISTRY_HOST}}/{{DOCKER_IMAGE_RESULT}}:{{DOCKER_IMAGE_VERSION}}
    ports:
      - "9051:80"
    depends_on:
      - db
    networks:
      - front-tier
      - back-tier

  worker:
    image: {{DOCKER_REGISTRY_HOST}}/{{DOCKER_IMAGE_WORKER}}:{{DOCKER_IMAGE_VERSION}}
    depends_on:
      - redis
      - db
    networks:
      - back-tier

  redis:
    image: redis:alpine
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "{{POSTGRES_USER}}"
      POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
